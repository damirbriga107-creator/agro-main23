generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Transaction Category Model
model Category {
  id           String          @id @default(cuid())
  name         String
  description  String?
  type         TransactionType
  parentId     String?
  isActive     Boolean         @default(true)
  color        String?
  icon         String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt

  parent           Category?         @relation(\"CategoryHierarchy\", fields: [parentId], references: [id])
  children         Category[]        @relation(\"CategoryHierarchy\")
  transactions     Transaction[]
  budgetCategories BudgetCategory[]

  @@map(\"categories\")
}

enum TransactionType {
  INCOME
  EXPENSE
}

// Transaction Model
model Transaction {
  id              String          @id @default(cuid())
  farmId          String
  categoryId      String
  amount          Decimal         @db.Decimal(12, 2)
  transactionType TransactionType
  description     String
  transactionDate DateTime
  paymentMethod   PaymentMethod?
  vendorName      String?
  invoiceNumber   String?
  tags            String[]
  userId          String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  category Category @relation(fields: [categoryId], references: [id])

  @@index([farmId, transactionDate])
  @@index([categoryId])
  @@index([transactionDate])
  @@index([transactionType])
  @@map(\"transactions\")
}

enum PaymentMethod {
  CASH
  BANK_TRANSFER
  CREDIT_CARD
  DEBIT_CARD
  CHECK
  OTHER
}

// Budget Model
model Budget {
  id           String       @id @default(cuid())
  farmId       String
  name         String
  description  String?
  startDate    DateTime
  endDate      DateTime
  totalBudget  Decimal      @db.Decimal(12, 2)
  status       BudgetStatus @default(ACTIVE)
  userId       String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  categories BudgetCategory[]

  @@index([farmId])
  @@index([status])
  @@map(\"budgets\")
}

enum BudgetStatus {
  ACTIVE
  INACTIVE
  COMPLETED
}

model BudgetCategory {
  id              String  @id @default(cuid())
  budgetId        String
  categoryId      String
  allocatedAmount Decimal @db.Decimal(12, 2)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  budget   Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id])

  @@unique([budgetId, categoryId])
  @@map(\"budget_categories\")
}

// Financial Analytics Models
model FinancialReport {
  id           String      @id @default(cuid())
  farmId       String
  reportType   ReportType
  startDate    DateTime
  endDate      DateTime
  data         Json
  generatedBy  String
  generatedAt  DateTime    @default(now())
  createdAt    DateTime    @default(now())

  @@index([farmId, reportType])
  @@index([generatedAt])
  @@map(\"financial_reports\")
}

enum ReportType {
  PROFIT_LOSS
  CASH_FLOW
  BUDGET_ANALYSIS
  CROP_PROFITABILITY
}

model FinancialSummary {
  id            String   @id @default(cuid())
  farmId        String
  period        String   // YYYY-MM or YYYY-Q1, etc.
  periodType    PeriodType
  totalIncome   Decimal  @db.Decimal(12, 2)
  totalExpenses Decimal  @db.Decimal(12, 2)
  netProfit     Decimal  @db.Decimal(12, 2)
  profitMargin  Decimal  @db.Decimal(5, 2)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([farmId, period, periodType])
  @@index([farmId, periodType])
  @@map(\"financial_summaries\")
}

enum PeriodType {
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
}

// Cash Flow Model
model CashFlowEntry {
  id              String          @id @default(cuid())
  farmId          String
  date            DateTime
  transactionType TransactionType
  amount          Decimal         @db.Decimal(12, 2)
  runningBalance  Decimal         @db.Decimal(12, 2)
  description     String?
  categoryId      String?
  createdAt       DateTime        @default(now())

  category Category? @relation(fields: [categoryId], references: [id])

  @@index([farmId, date])
  @@map(\"cash_flow_entries\")
}

// Recurring Transaction Templates
model RecurringTransaction {
  id              String              @id @default(cuid())
  farmId          String
  categoryId      String
  name            String
  description     String
  amount          Decimal             @db.Decimal(12, 2)
  transactionType TransactionType
  frequency       RecurrencyFrequency
  dayOfMonth      Int?                // For monthly/yearly
  dayOfWeek       Int?                // For weekly (0=Sunday)
  startDate       DateTime
  endDate         DateTime?
  isActive        Boolean             @default(true)
  lastExecuted    DateTime?
  nextExecution   DateTime
  userId          String
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

  category Category @relation(fields: [categoryId], references: [id])

  @@index([farmId, isActive])
  @@index([nextExecution])
  @@map(\"recurring_transactions\")
}

enum RecurrencyFrequency {
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
}

// Market Data for Reference
model MarketPrice {
  id         String   @id @default(cuid())
  commodity  String
  market     String
  price      Decimal  @db.Decimal(10, 4)
  unit       String
  currency   String   @default(\"USD\")
  date       DateTime
  source     String
  createdAt  DateTime @default(now())

  @@unique([commodity, market, date])
  @@index([commodity, date])
  @@map(\"market_prices\")
}

// Financial Goals and Targets
model FinancialGoal {
  id          String     @id @default(cuid())
  farmId      String
  name        String
  description String?
  goalType    GoalType
  targetAmount Decimal   @db.Decimal(12, 2)
  currentAmount Decimal  @db.Decimal(12, 2) @default(0)
  targetDate  DateTime
  isActive    Boolean    @default(true)
  userId      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([farmId, isActive])
  @@map(\"financial_goals\")
}

enum GoalType {
  REVENUE
  PROFIT
  SAVINGS
  EXPENSE_REDUCTION
  INVESTMENT
}"